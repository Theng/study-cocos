{"version":3,"sources":["OneSidePlatform.js.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,kFAAkF;AAClF,yFAAyF;AACzF,mBAAmB;AACnB,4FAA4F;AAC5F,mGAAmG;AACnG,8BAA8B;AAC9B,4FAA4F;AAC5F,mGAAmG;;;;;;;;;;;;;;;;;;;;;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAsC,4BAAY;IADlD;QAAA,qEA6DC;QAzDG,WAAK,GAAa,IAAI,CAAC;QAGvB,UAAI,GAAW,OAAO,CAAC;;QAqDvB,iBAAiB;IACrB,CAAC;IApDG,wBAAwB;IAExB,yBAAM,GAAN;QACI,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;IACjC,CAAC;IAED,iCAAc,GAAd,UAAgB,OAAO,EAAE,YAAY,EAAE,aAAa;QAChD,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;QAE9B,IAAI,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC;QACnC,IAAI,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC;QAErC,IAAI,aAAa,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;QAC/C,IAAI,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;QAElC,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC7C,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACvC,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACnC,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAEvC,kDAAkD;QAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,YAAY,CAAC,+BAA+B,CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAE,CAAC;YAC5E,SAAS,CAAC,+BAA+B,CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,aAAa,CAAE,CAAC;YACtE,YAAY,CAAC,cAAc,CAAE,aAAa,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,WAAW,CAAE,CAAC;YAEpF,IAAK,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,EAAG,gEAAgE;gBACvF,OAAO,CAAE,6DAA6D;iBACrE,IAAK,WAAW,CAAC,CAAC,GAAG,EAAE,EAAG,EAAE,yCAAyC;gBACtE,uDAAuD;gBACvD,YAAY,CAAC,aAAa,CAAE,MAAM,CAAC,CAAC,CAAC,EAAE,aAAa,CAAE,CAAC;gBACvD,IAAI,aAAa,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAE,uDAAuD;gBAC/G,IAAK,aAAa,CAAC,CAAC,GAAG,aAAa,GAAG,GAAG,GAAC,EAAE;oBACzC,OAAO,CAAE,0EAA0E;aAC1F;iBACI;gBACD,6BAA6B;aAChC;SACJ;QAED,kCAAkC;QAClC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,wBAAK,GAAL;IAEA,CAAC;IAtDD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;2CACI;IAGvB;QADC,QAAQ;0CACc;IANN,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA4D5B;IAAD,eAAC;CA5DD,AA4DC,CA5DqC,EAAE,CAAC,SAAS,GA4DjD;kBA5DoB,QAAQ","file":"","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    @property\n    text: string = 'hello';\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.pointVelPlatform = cc.v2();\n        this.pointVelOther = cc.v2();\n        this.relativeVel = cc.v2();\n        this.relativePoint = cc.v2();\n    }\n\n    onBeginContact (contact, selfCollider, otherCollider) {\n        let cache = this._pointsCache;\n\n        let otherBody = otherCollider.body;\n        let platformBody = selfCollider.body;\n\n        let worldManifold = contact.getWorldManifold();\n        let points = worldManifold.points;\n\n        let pointVelPlatform = this.pointVelPlatform;\n        let pointVelOther = this.pointVelOther;\n        let relativeVel = this.relativeVel;\n        let relativePoint = this.relativePoint;\n\n        //check if contact points are moving into platform\n        for (let i = 0; i < points.length; i++) {\n            platformBody.getLinearVelocityFromWorldPoint( points[i], pointVelPlatform );\n            otherBody.getLinearVelocityFromWorldPoint( points[i], pointVelOther );\n            platformBody.getLocalVector( pointVelOther.subSelf(pointVelPlatform), relativeVel );\n            \n            if ( relativeVel.y < -32 ) //if moving down faster than 32 pixel/s (1m/s), handle as before\n                return;  //point is moving into platform, leave contact solid and exit\n            else if ( relativeVel.y < 32 ) { //if moving slower than 32 pixel/s (1m/s)\n                //borderline case, moving only slightly out of platform\n                platformBody.getLocalPoint( points[i], relativePoint );\n                let platformFaceY = selfCollider.getAABB().height / 2;  //front of platform, should only used on a box collider\n                if ( relativePoint.y > platformFaceY - 0.1*32 )\n                    return;  //contact point is less than 3.2pixel (10cm) inside front face of platfrom\n            }\n            else {\n                //moving up faster than 1 m/s\n            }\n        }\n        \n        // store disabled state to contact\n        contact.disabled = true;\n    }\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n"]}
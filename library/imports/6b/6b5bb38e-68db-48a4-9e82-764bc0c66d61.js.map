{"version":3,"sources":["../../../../assets/scripts/assets/scripts/PhysicManager.ts"],"names":[],"mappings":";;;;AACA,EAAE,CAAC,KAAK,CAAC;IACL,OAAO,EAAE,EAAE,CAAC,SAAS;IAErB,UAAU,EAAE;QACR,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;QACnB,UAAU,EAAE,IAAI;KACnB;IAED,8BAA8B;IAC9B,MAAM,EAAE;QACJ,EAAE,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;QAC/C,IAAI,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAChD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAEvB,IAAI,KAAK,GAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACjD,IAAI,MAAM,GAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAEnD,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;QAEzB,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC;QAEpC,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,kBAAkB;YAClB,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;YAC7C,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;SACjC;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,GAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,MAAM,GAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;QAE7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5B,CAAC;IAED,SAAS,YAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM;QAChC,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC;QACxD,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACtB,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACtB,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5B,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAClC,CAAC;CACJ,CAAC,CAAC","file":"","sourceRoot":"../../../../assets/scripts","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        size: cc.size(0, 0),\n        mouseJoint: true\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        cc.director.getPhysicsManager().enabled = true;\n        var manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n\n        let width   = this.size.width || this.node.width;\n        let height  = this.size.height || this.node.height;\n\n        let node = new cc.Node();\n\n        let body = node.addComponent(cc.RigidBody);\n        body.type = cc.RigidBodyType.Static;\n\n        if (this.mouseJoint) {\n            // add mouse joint\n            let joint = node.addComponent(cc.MouseJoint);\n            joint.mouseRegion = this.node;    \n        }\n        \n        this._addBound(node, 0, height/2, width, 20);\n        this._addBound(node, 0, -height/2, width, 20);\n        this._addBound(node, -width/2, 0, 20, height);\n        this._addBound(node, width/2, 0, 20, height);\n\n        node.parent = this.node;\n    },\n\n    _addBound (node, x, y, width, height) {\n        let collider = node.addComponent(cc.PhysicsBoxCollider);\n        collider.offset.x = x;\n        collider.offset.y = y;\n        collider.size.width = width;\n        collider.size.height = height;\n    }\n});\n"]}